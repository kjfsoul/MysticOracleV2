{
  "tasks": [
    {
      "id": "task-001",
      "title": "Implement Basic Tarot Card Component",
      "description": "Create a reusable tarot card component with front/back faces",
      "type": "feature",
      "priority": "high",
      "assignedAgent": "CodeAgent",
      "requiredMcpServers": ["react-ui", "design-system-tailwind"],
      "dependencies": [],
      "acceptanceCriteria": [
        "Component renders card front and back",
        "Accepts custom images",
        "Responsive sizing",
        "Accessible markup"
      ],
      "estimatedEffort": "medium",
      "status": "pending"
    },
    {
      "id": "task-002",
      "title": "Create Daily Tarot API Endpoint",
      "description": "Implement serverless function to generate daily tarot card",
      "type": "feature",
      "priority": "high",
      "assignedAgent": "APIAgent",
      "requiredMcpServers": ["netlify-edge", "ai-function-pack"],
      "dependencies": [],
      "acceptanceCriteria": [
        "Returns random card with interpretation",
        "Caches result for 24 hours",
        "Handles errors gracefully",
        "Includes proper typing"
      ],
      "estimatedEffort": "medium",
      "status": "pending"
    },
    {
      "id": "task-003",
      "title": "Generate Major Arcana Card Descriptions",
      "description": "Create detailed descriptions for all 22 Major Arcana cards",
      "type": "content",
      "priority": "medium",
      "assignedAgent": "ContentAgent",
      "requiredMcpServers": ["ai-function-pack", "cms-headless"],
      "dependencies": [],
      "acceptanceCriteria": [
        "Includes upright and reversed meanings",
        "Covers symbolism and imagery",
        "Provides practical interpretations",
        "Consistent tone and depth"
      ],
      "estimatedEffort": "large",
      "status": "pending"
    },
    {
      "id": "task-004",
      "title": "Implement Card Flip Animation",
      "description": "Create smooth 3D flip animation for tarot cards",
      "type": "feature",
      "priority": "medium",
      "assignedAgent": "DesignAgent",
      "requiredMcpServers": ["react-ui", "design-system-tailwind"],
      "dependencies": ["task-001"],
      "acceptanceCriteria": [
        "Card flips smoothly on click",
        "Animation works on all supported browsers",
        "Includes keyboard accessibility",
        "Respects reduced motion preferences"
      ],
      "estimatedEffort": "medium",
      "status": "pending"
    },
    {
      "id": "task-005",
      "title": "Create Basic Three-Card Spread Layout",
      "description": "Implement layout for past/present/future tarot spread",
      "type": "feature",
      "priority": "high",
      "assignedAgent": "CodeAgent",
      "requiredMcpServers": ["react-ui", "design-system-tailwind"],
      "dependencies": ["task-001"],
      "acceptanceCriteria": [
        "Displays three cards in horizontal layout",
        "Shows position labels (past/present/future)",
        "Responsive on all screen sizes",
        "Animates card placement"
      ],
      "estimatedEffort": "medium",
      "status": "pending"
    },
    {
      "id": "task-006",
      "title": "Implement User Authentication UI",
      "description": "Create sign-in and registration components",
      "type": "feature",
      "priority": "high",
      "assignedAgent": "CodeAgent",
      "requiredMcpServers": ["react-ui", "fullstack-turbo"],
      "dependencies": [],
      "acceptanceCriteria": [
        "Email/password sign-in form",
        "Registration form with validation",
        "Social login buttons",
        "Password reset flow",
        "Error handling and feedback"
      ],
      "estimatedEffort": "large",
      "status": "pending"
    },
    {
      "id": "task-007",
      "title": "Create Authentication API Endpoints",
      "description": "Implement Netlify Functions for authentication",
      "type": "feature",
      "priority": "high",
      "assignedAgent": "APIAgent",
      "requiredMcpServers": ["netlify-edge", "fullstack-turbo"],
      "dependencies": [],
      "acceptanceCriteria": [
        "Sign-in endpoint with JWT generation",
        "Registration endpoint with validation",
        "Password reset endpoints",
        "Social auth integration",
        "Proper error handling"
      ],
      "estimatedEffort": "large",
      "status": "pending"
    },
    {
      "id": "task-008",
      "title": "Implement Basic Astrology Chart Component",
      "description": "Create component to display natal chart",
      "type": "feature",
      "priority": "medium",
      "assignedAgent": "CodeAgent",
      "requiredMcpServers": ["react-ui", "design-system-tailwind"],
      "dependencies": [],
      "acceptanceCriteria": [
        "Renders zodiac wheel with houses",
        "Places planets in correct positions",
        "Shows aspect lines between planets",
        "Responsive sizing",
        "Interactive tooltips"
      ],
      "estimatedEffort": "large",
      "status": "pending"
    },
    {
      "id": "task-009",
      "title": "Create Astrology Calculation API",
      "description": "Implement serverless function for chart calculations",
      "type": "feature",
      "priority": "medium",
      "assignedAgent": "APIAgent",
      "requiredMcpServers": ["netlify-edge", "ai-function-pack"],
      "dependencies": [],
      "acceptanceCriteria": [
        "Calculates planet positions from birth data",
        "Determines houses and aspects",
        "Returns formatted chart data",
        "Handles errors gracefully",
        "Includes proper typing"
      ],
      "estimatedEffort": "large",
      "status": "pending"
    },
    {
      "id": "task-010",
      "title": "Write Unit Tests for Tarot Components",
      "description": "Create comprehensive tests for tarot card components",
      "type": "testing",
      "priority": "medium",
      "assignedAgent": "TestAgent",
      "requiredMcpServers": ["dev-nextjs"],
      "dependencies": ["task-001", "task-004", "task-005"],
      "acceptanceCriteria": [
        "Tests component rendering",
        "Tests prop variations",
        "Tests animations and interactions",
        "Tests accessibility features",
        "Achieves >80% coverage"
      ],
      "estimatedEffort": "medium",
      "status": "pending"
    }
  ]
}
