{
  "projectName": "MysticArcana",
  "agents": {
    "DevAgent": {
      "description": "Handles development tasks",
      "schedule": "0 */4 * * *",
      "tasks": [
        {
          "name": "code-review",
          "description": "Review code for quality and standards",
          "schedule": "0 */2 * * *",
          "action": {
            "type": "script",
            "path": "scripts/code-review.js"
          }
        },
        {
          "name": "test-automation",
          "description": "Run automated tests",
          "schedule": "0 1 * * *",
          "action": {
            "type": "command",
            "command": "npm test"
          }
        },
        {
          "name": "dependency-check",
          "description": "Check for outdated dependencies",
          "schedule": "0 3 * * 1",
          "action": {
            "type": "command",
            "command": "npm outdated"
          }
        }
      ]
    },
    "DeployAgent": {
      "description": "Handles deployment tasks",
      "schedule": "0 */6 * * *",
      "tasks": [
        {
          "name": "build-check",
          "description": "Check build status",
          "schedule": "0 */3 * * *",
          "action": {
            "type": "command",
            "command": "npm run build"
          }
        },
        {
          "name": "deploy-staging",
          "description": "Deploy to staging environment",
          "schedule": "0 2 * * 1-5",
          "action": {
            "type": "script",
            "path": "scripts/deploy-staging.js"
          }
        }
      ]
    },
    "DocAgent": {
      "description": "Handles documentation tasks",
      "schedule": "0 5 * * *",
      "tasks": [
        {
          "name": "generate-docs",
          "description": "Generate documentation from code",
          "schedule": "0 5 * * 1,4",
          "action": {
            "type": "command",
            "command": "npm run docs"
          }
        },
        {
          "name": "check-readme",
          "description": "Check README for outdated information",
          "schedule": "0 5 * * 3",
          "action": {
            "type": "script",
            "path": "scripts/check-readme.js"
          }
        }
      ]
    },
    "DataCollectionAgent": {
      "description": "Collects and processes data for various brands",
      "schedule": "0 */12 * * *",
      "tasks": [
        {
          "name": "celebrity-birthdays",
          "description": "Collect celebrity birthdays and related information",
          "schedule": "0 1 * * *",
          "action": {
            "type": "script",
            "path": "scripts/data-collection/celebrity-birthdays.js"
          }
        },
        {
          "name": "edm-artists",
          "description": "Collect EDM artists, producers, and influencers data",
          "schedule": "0 2 * * *",
          "action": {
            "type": "script",
            "path": "scripts/data-collection/edm-artists.js"
          }
        },
        {
          "name": "trending-topics",
          "description": "Collect trending topics and themes for content creation",
          "schedule": "0 */6 * * *",
          "action": {
            "type": "script",
            "path": "scripts/data-collection/trending-topics.js"
          }
        },
        {
          "name": "data-cleanup",
          "description": "Clean and organize collected data",
          "schedule": "30 3 * * *",
          "action": {
            "type": "script",
            "path": "scripts/data-collection/data-cleanup.js"
          }
        }
      ]
    },
    "MediaAgent": {
      "description": "Searches for and generates media content",
      "schedule": "0 */8 * * *",
      "tasks": [
        {
          "name": "image-search",
          "description": "Search for trending and relevant images",
          "schedule": "0 */12 * * *",
          "action": {
            "type": "script",
            "path": "scripts/media/image-search.js"
          }
        },
        {
          "name": "video-search",
          "description": "Search for trending and relevant videos",
          "schedule": "0 */12 * * *",
          "action": {
            "type": "script",
            "path": "scripts/media/video-search.js"
          }
        },
        {
          "name": "image-generation",
          "description": "Generate unique images using AI",
          "schedule": "0 4 * * *",
          "action": {
            "type": "script",
            "path": "scripts/media/image-generation.js"
          }
        },
        {
          "name": "media-enhancement",
          "description": "Enhance and modify collected media",
          "schedule": "30 4 * * *",
          "action": {
            "type": "script",
            "path": "scripts/media/media-enhancement.js"
          }
        }
      ]
    },
    "WebUXAgent": {
      "description": "Manages web user experience and application development",
      "schedule": "0 */24 * * *",
      "tasks": [
        {
          "name": "app-generation",
          "description": "Generate and update web applications",
          "schedule": "0 5 * * 1",
          "action": {
            "type": "script",
            "path": "scripts/web-ux/app-generation.js"
          }
        },
        {
          "name": "dashboard-update",
          "description": "Update data dashboards with latest information",
          "schedule": "0 6 * * *",
          "action": {
            "type": "script",
            "path": "scripts/web-ux/dashboard-update.js"
          }
        }
      ]
    },
    "SMSAgent": {
      "description": "Handles SMS communication with users",
      "schedule": "0 */1 * * *",
      "tasks": [
        {
          "name": "send-status-update",
          "description": "Send status update via SMS",
          "schedule": "0 */4 * * *",
          "action": {
            "type": "script",
            "path": "scripts/sms-status-update.js"
          }
        },
        {
          "name": "process-sms-commands",
          "description": "Process incoming SMS commands",
          "schedule": "*/5 * * * *",
          "action": {
            "type": "script",
            "path": "scripts/process-sms-commands.js"
          }
        },
        {
          "name": "start-sms-server",
          "description": "Start the SMS server",
          "schedule": "@reboot",
          "action": {
            "type": "script",
            "path": "scripts/start-sms-server.js"
          }
        }
      ]
    },
    "LearningAgent": {
      "description": "Manages learning systems and continuous improvement",
      "schedule": "0 */12 * * *",
      "tasks": [
        {
          "name": "analyze-interruptions",
          "description": "Analyze interruption patterns and generate recommendations",
          "schedule": "0 0 * * *",
          "action": {
            "type": "script",
            "path": "scripts/interruption-tracker.js"
          }
        },
        {
          "name": "update-vscode-config",
          "description": "Update VS Code configuration based on project needs",
          "schedule": "0 1 * * 1",
          "action": {
            "type": "script",
            "path": "scripts/vscode-integration.js"
          }
        },
        {
          "name": "generate-learning-report",
          "description": "Generate learning system report",
          "schedule": "0 2 * * 1",
          "action": {
            "type": "script",
            "path": "scripts/generate-learning-report.js"
          }
        }
      ]
    }
  },
  "workflows": {
    "nightly-build": {
      "description": "Run nightly build process",
      "schedule": "0 0 * * *",
      "steps": [
        {
          "agent": "DevAgent",
          "task": "test-automation",
          "timeout": 1800,
          "required": true
        },
        {
          "agent": "DeployAgent",
          "task": "build-check",
          "timeout": 1200,
          "required": true
        },
        {
          "agent": "DeployAgent",
          "task": "deploy-staging",
          "timeout": 3600,
          "required": false,
          "condition": {
            "type": "success",
            "step": 1
          }
        }
      ]
    },
    "weekly-maintenance": {
      "description": "Run weekly maintenance tasks",
      "schedule": "0 1 * * 0",
      "steps": [
        {
          "agent": "DevAgent",
          "task": "dependency-check",
          "timeout": 1200,
          "required": true
        },
        {
          "agent": "DocAgent",
          "task": "generate-docs",
          "timeout": 1800,
          "required": false
        },
        {
          "agent": "DocAgent",
          "task": "check-readme",
          "timeout": 600,
          "required": false
        }
      ]
    },
    "daily-content-pipeline": {
      "description": "Daily content collection and generation pipeline",
      "schedule": "0 3 * * *",
      "steps": [
        {
          "agent": "DataCollectionAgent",
          "task": "celebrity-birthdays",
          "timeout": 1800,
          "required": true
        },
        {
          "agent": "DataCollectionAgent",
          "task": "edm-artists",
          "timeout": 1800,
          "required": true
        },
        {
          "agent": "DataCollectionAgent",
          "task": "trending-topics",
          "timeout": 1200,
          "required": true
        },
        {
          "agent": "DataCollectionAgent",
          "task": "data-cleanup",
          "timeout": 1200,
          "required": true,
          "condition": {
            "type": "success",
            "step": 2
          }
        },
        {
          "agent": "MediaAgent",
          "task": "image-search",
          "timeout": 2400,
          "required": false,
          "condition": {
            "type": "success",
            "step": 3
          }
        },
        {
          "agent": "MediaAgent",
          "task": "video-search",
          "timeout": 2400,
          "required": false,
          "condition": {
            "type": "success",
            "step": 3
          }
        },
        {
          "agent": "MediaAgent",
          "task": "image-generation",
          "timeout": 3600,
          "required": false,
          "condition": {
            "type": "success",
            "step": 4
          }
        },
        {
          "agent": "MediaAgent",
          "task": "media-enhancement",
          "timeout": 1800,
          "required": false,
          "condition": {
            "type": "success",
            "step": 6
          }
        },
        {
          "agent": "WebUXAgent",
          "task": "dashboard-update",
          "timeout": 1200,
          "required": false,
          "condition": {
            "type": "success",
            "step": 7
          }
        }
      ]
    },
    "weekly-app-update": {
      "description": "Weekly application update and generation",
      "schedule": "0 2 * * 1",
      "steps": [
        {
          "agent": "DataCollectionAgent",
          "task": "data-cleanup",
          "timeout": 1800,
          "required": true
        },
        {
          "agent": "WebUXAgent",
          "task": "app-generation",
          "timeout": 7200,
          "required": true,
          "condition": {
            "type": "success",
            "step": 0
          }
        },
        {
          "agent": "WebUXAgent",
          "task": "dashboard-update",
          "timeout": 1800,
          "required": true,
          "condition": {
            "type": "success",
            "step": 1
          }
        },
        {
          "agent": "DeployAgent",
          "task": "build-check",
          "timeout": 1200,
          "required": false,
          "condition": {
            "type": "success",
            "step": 2
          }
        }
      ]
    }
  },
  "taskTypes": {
    "custom": {
      "handler": "scripts/custom-task-handler.js",
      "description": "Custom task type"
    }
  },
  "eventHooks": {
    "implementation": "scripts/event-hooks.js",
    "enabled": true
  },
  "integrations": {
    "slack": {
      "enabled": false,
      "webhookUrl": "",
      "channel": "#agents",
      "username": "Agent System",
      "events": [
        "task.failure",
        "workflow.complete"
      ]
    },
    "github": {
      "enabled": false,
      "token": "",
      "repository": "",
      "events": [
        "workflow.complete"
      ]
    }
  }
}